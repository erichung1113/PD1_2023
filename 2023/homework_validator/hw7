HW=7
Subtask="1 2 3 4"
Score=(10 30 30 30)
# -------------

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;36m'
ORANGE='\033[40m'
RESET='\033[0m'


if [[ $(basename $(pwd)) = "HW$HW" ]]; then
    FilePath=$(pwd)
else
    FilePath=~/HW$HW
fi

while (( $# != 0 )); do
    if [[ $1 = "-p" ]]; then
        shift 1
        FilePath=$1
    else
        todo="$todo $1"
    fi
    shift 1
done
if [[ $todo != "" ]]; then Subtask=$todo; fi

# copy testcase
if test -d $FilePath/testcase ; then rm -r $FilePath/testcase; fi
if test -d $FilePath/your_answer ; then rm -r $FilePath/your_answer; fi
mkdir $FilePath/testcase $FilePath/your_answer
cp -r /share/HW${HW}_TestCase/* $FilePath/testcase

score=0

echo -e "=> Using Path : $FilePath/hw${HW}.c"

if test -f $FilePath/hw${HW} ; then rm $FilePath/hw${HW}; fi
gcc $FilePath/hw${HW}.c -o $FilePath/hw${HW}
if (( $? != 0 )); then
    if ! test -f $FilePath/hw${HW}.c; then
        echo -e "${RED}File $FilePath/hw${HW}.c not found.${RESET}"
    else
        echo -e "${YELLOW}Compilation Error${RESET}"
    fi
    echo "-----------------------------"
else
    for subtask in $Subtask; do
        echo -e "${YELLOW}Testing Subtask $subtask ...${RESET}\n-----------------------------"

        mkdir $FilePath/your_answer/Subtask$subtask

        Pass_TC_Cnt=0
        for tc_name in $(ls $FilePath/testcase/Subtask$subtask | grep 'in$' | sed 's/.in//'); do
            input=$FilePath/testcase/Subtask$subtask/$tc_name.in
            answer=$FilePath/testcase/Subtask$subtask/$tc_name.out
            usrans=$FilePath/your_answer/Subtask$subtask/$tc_name.out
            echo -n "$tc_name : "
            Execusrans=$(timeout 1 bash -c "$FilePath/hw${HW} < $input > $usrans" 2>&1)
            ExecReturnValue=$?
            if (( $ExecReturnValue != 0 )); then
                if (( $ExecReturnValue == 124 )); then
                    echo -e "${BLUE}Time Limit Exceed${RESET}"
                else
                    echo -e "${RED}Runtime Error${RESET}"
                    echo $Execusrans
                fi
            else
                result=$(/usr/local/bin/hw7_checker $input $answer $usrans $subtask)
                if (( $? == 1 )); then
                    echo -e "${RED}Wrong Answer${RESET}"
                    echo -e -n "${BLUE}Input   Data${RESET} : \n$(cat $input | head -c 50)"
                    if (( $(cat $input | wc -m) > 50)) ; then
                        echo "....(more)"
                    else
                        echo ""
                    fi
                    echo -e -n "\n${BLUE}Your    Answer${RESET} : \n$(cat $usrans | head -c 50)"
                    if (( $(cat $usrans | wc -m) > 50)) ; then
                        echo "....(more)"
                    else
                        echo ""
                    fi
                    echo -e -n "\n${BLUE}Correct Answer${RESET} : \n$(cat $answer | head -c 50)"
                    if (( $(cat $answer | wc -m) > 50)) ; then
                        echo "....(more)"
                    else
                        echo ""
                    fi
                    echo -e "\n${RED}$result${RESET}\n"
                    echo -e "Your answer : $usrans"
                    echo -e "TA's answer : $answer"
                    
                else
                    echo -e "${GREEN}ACCEPT${RESET}"
                    (( Pass_TC_Cnt++ ))
                fi
                
            fi
            echo "-----------------------------"
        done

        TC_Cnt=$(ls $FilePath/testcase/Subtask$subtask | grep 'in$' | wc -l)
        if (( $Pass_TC_Cnt == $TC_Cnt )); then
            (( score += ${Score[(( $(printf "%d" "'$subtask") - 49 ))]} ))
        fi
    done
fi

echo -e "\nTotal Score : $score/100"
exit $score
